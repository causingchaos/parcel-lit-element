{"id":"FkoP","dependencies":[{"name":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\package.json","includedInParent":true,"mtime":1604449638600},{"name":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\node_modules\\@polymer\\polymer\\package.json","includedInParent":true,"mtime":1604392834024},{"name":"../utils/templatize.js","loc":{"line":10,"column":66},"parent":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\node_modules\\@polymer\\polymer\\lib\\legacy\\templatizer-behavior.js","resolved":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\node_modules\\@polymer\\polymer\\lib\\utils\\templatize.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Templatizer=void 0;var t=require(\"../utils/templatize.js\");let e;const r={templatize(e,r){this._templatizerTemplate=e,this.ctor=(0,t.templatize)(e,this,{mutableData:Boolean(r),parentModel:this._parentModel,instanceProps:this._instanceProps,forwardHostProp:this._forwardHostPropV2,notifyInstanceProp:this._notifyInstancePropV2})},stamp(t){return new this.ctor(t)},modelForElement(e){return(0,t.modelForElement)(this._templatizerTemplate,e)}};exports.Templatizer=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":0}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":13}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":20}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":35}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":43}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":56}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":57}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":64}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":68}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":76}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":93}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":10,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":10,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":10,"column":0},"generated":{"line":1,"column":101}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":10,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":22,"column":0},"generated":{"line":1,"column":135}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"TemplatizerUser","original":{"line":22,"column":4},"generated":{"line":1,"column":139}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":141}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"Templatizer","original":{"line":85,"column":13},"generated":{"line":1,"column":147}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":27},"generated":{"line":1,"column":149}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"templatize","original":{"line":100,"column":2},"generated":{"line":1,"column":150}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"template","original":{"line":100,"column":13},"generated":{"line":1,"column":161}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"mutableData","original":{"line":100,"column":23},"generated":{"line":1,"column":163}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"_templatizerTemplate","original":{"line":101,"column":9},"generated":{"line":1,"column":166}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"_templatizerTemplate","original":{"line":101,"column":9},"generated":{"line":1,"column":171}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"template","original":{"line":101,"column":32},"generated":{"line":1,"column":192}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"ctor","original":{"line":102,"column":9},"generated":{"line":1,"column":194}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"ctor","original":{"line":102,"column":9},"generated":{"line":1,"column":199}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":103,"column":8},"generated":{"line":1,"column":205}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"template","original":{"line":103,"column":19},"generated":{"line":1,"column":207}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"template","original":{"line":103,"column":19},"generated":{"line":1,"column":209}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"template","original":{"line":103,"column":19},"generated":{"line":1,"column":221}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":103,"column":8},"generated":{"line":1,"column":223}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":103,"column":77},"generated":{"line":1,"column":228}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"mutableData","original":{"line":104,"column":10},"generated":{"line":1,"column":229}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"Boolean","original":{"line":104,"column":23},"generated":{"line":1,"column":241}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"mutableData","original":{"line":104,"column":31},"generated":{"line":1,"column":249}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"parentModel","original":{"line":105,"column":10},"generated":{"line":1,"column":252}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":105,"column":23},"generated":{"line":1,"column":264}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"_parentModel","original":{"line":105,"column":28},"generated":{"line":1,"column":269}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"instanceProps","original":{"line":106,"column":10},"generated":{"line":1,"column":282}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":106,"column":25},"generated":{"line":1,"column":296}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"_instanceProps","original":{"line":106,"column":30},"generated":{"line":1,"column":301}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"forwardHostProp","original":{"line":107,"column":10},"generated":{"line":1,"column":316}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":107,"column":27},"generated":{"line":1,"column":332}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"_forwardHostPropV2","original":{"line":107,"column":32},"generated":{"line":1,"column":337}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"notifyInstanceProp","original":{"line":108,"column":10},"generated":{"line":1,"column":356}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":108,"column":30},"generated":{"line":1,"column":375}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"_notifyInstancePropV2","original":{"line":108,"column":35},"generated":{"line":1,"column":380}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"stamp","original":{"line":125,"column":2},"generated":{"line":1,"column":405}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"model","original":{"line":125,"column":8},"generated":{"line":1,"column":411}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":126,"column":11},"generated":{"line":1,"column":414}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":126,"column":11},"generated":{"line":1,"column":421}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":126,"column":15},"generated":{"line":1,"column":425}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"ctor","original":{"line":126,"column":20},"generated":{"line":1,"column":430}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"model","original":{"line":126,"column":25},"generated":{"line":1,"column":435}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"modelForElement","original":{"line":140,"column":2},"generated":{"line":1,"column":439}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"el","original":{"line":140,"column":18},"generated":{"line":1,"column":455}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":141,"column":11},"generated":{"line":1,"column":458}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":141,"column":11},"generated":{"line":1,"column":465}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":141,"column":27},"generated":{"line":1,"column":467}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":141,"column":27},"generated":{"line":1,"column":469}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":141,"column":27},"generated":{"line":1,"column":486}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"_templatizerTemplate","original":{"line":141,"column":32},"generated":{"line":1,"column":491}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","name":"el","original":{"line":141,"column":54},"generated":{"line":1,"column":512}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":517}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":525}},{"source":"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js","original":{"line":85,"column":7},"generated":{"line":1,"column":537}}],"sources":{"../node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { TemplateInstanceBase, templatize, modelForElement } from '../utils/templatize.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n *   _templatizerTemplate: HTMLTemplateElement,\n *   _parentModel: boolean,\n *   _instanceProps: Object,\n *   _forwardHostPropV2: Function,\n *   _notifyInstancePropV2: Function,\n *   ctor: function(new:TemplateInstanceBase, Object=)\n * }}\n */\nlet TemplatizerUser; // eslint-disable-line\n\n/**\n * The `Templatizer` behavior adds methods to generate instances of\n * templates that are each managed by an anonymous `PropertyEffects`\n * instance where data-bindings in the stamped template content are bound to\n * accessors on itself.\n *\n * This behavior is provided in Polymer 2.x-3.x as a hybrid-element convenience\n * only.  For non-hybrid usage, the `Templatize` library\n * should be used instead.\n *\n * Example:\n *\n *     import {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     this.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = this.stamp({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. light DOM\n *     dom(this).appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * Users of `Templatizer` may need to implement the following abstract\n * API's to determine how properties and paths from the host should be\n * forwarded into to instances:\n *\n *     _forwardHostPropV2: function(prop, value)\n *\n * Likewise, users may implement these additional abstract API's to determine\n * how instance-specific properties that change on the instance should be\n * forwarded out to the host, if necessary.\n *\n *     _notifyInstancePropV2: function(inst, prop, value)\n *\n * In order to determine which properties are instance-specific and require\n * custom notification via `_notifyInstanceProp`, define an `_instanceProps`\n * object containing keys for each instance prop, for example:\n *\n *     _instanceProps: {\n *       item: true,\n *       index: true\n *     }\n *\n * Any properties used in the template that are not defined in _instanceProp\n * will be forwarded out to the Templatize `owner` automatically.\n *\n * Users may also implement the following abstract function to show or\n * hide any DOM generated using `stamp`:\n *\n *     _showHideChildren: function(shouldHide)\n *\n * Note that some callbacks are suffixed with `V2` in the Polymer 2.x behavior\n * as the implementations will need to differ from the callbacks required\n * by the 1.x Templatizer API due to changes in the `TemplateInstance` API\n * between versions 1.x and 2.x.\n *\n * @polymerBehavior\n */\nexport const Templatizer = {\n\n  /**\n   * Generates an anonymous `TemplateInstance` class (stored as `this.ctor`)\n   * for the provided template.  This method should be called once per\n   * template to prepare an element for stamping the template, followed\n   * by `stamp` to create new instances of the template.\n   *\n   * @param {!HTMLTemplateElement} template Template to prepare\n   * @param {boolean=} mutableData When `true`, the generated class will skip\n   *   strict dirty-checking for objects and arrays (always consider them to\n   *   be \"dirty\"). Defaults to false.\n   * @return {void}\n   * @this {TemplatizerUser}\n   */\n  templatize(template, mutableData) {\n    this._templatizerTemplate = template;\n    this.ctor =\n        templatize(template, /** @type {!Polymer_PropertyEffects} */ (this), {\n          mutableData: Boolean(mutableData),\n          parentModel: this._parentModel,\n          instanceProps: this._instanceProps,\n          forwardHostProp: this._forwardHostPropV2,\n          notifyInstanceProp: this._notifyInstancePropV2\n        });\n  },\n\n  /**\n   * Creates an instance of the template prepared by `templatize`.  The object\n   * returned is an instance of the anonymous class generated by `templatize`\n   * whose `root` property is a document fragment containing newly cloned\n   * template content, and which has property accessors corresponding to\n   * properties referenced in template bindings.\n   *\n   * @param {Object=} model Object containing initial property values to\n   *   populate into the template bindings.\n   * @return {TemplateInstanceBase} Returns the created instance of\n   * the template prepared by `templatize`.\n   * @this {TemplatizerUser}\n   */\n  stamp(model) {\n    return new this.ctor(model);\n  },\n\n  /**\n   * Returns the template \"model\" (`TemplateInstance`) associated with\n   * a given element, which serves as the binding scope for the template\n   * instance the element is contained in.  A template model should be used\n   * to manipulate data associated with this template instance.\n   *\n   * @param {HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   * @this {TemplatizerUser}\n   */\n  modelForElement(el) {\n    return modelForElement(this._templatizerTemplate, el);\n  }\n};\n"},"lineCount":null}},"error":null,"hash":"24d7e6f66b2b83a0fc8b810e60ebfdc6","cacheData":{"env":{}}}