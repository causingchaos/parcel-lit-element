{"id":"../node_modules/@polymer/polymer/polymer-element.js","dependencies":[{"name":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\package.json","includedInParent":true,"mtime":1604449638600},{"name":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\node_modules\\@polymer\\polymer\\package.json","includedInParent":true,"mtime":1604392834024},{"name":"./lib/mixins/element-mixin.js","loc":{"line":11,"column":38},"parent":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\node_modules\\@polymer\\polymer\\polymer-element.js","resolved":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\node_modules\\@polymer\\polymer\\lib\\mixins\\element-mixin.js"},{"name":"./lib/utils/html-tag.js","loc":{"line":12,"column":21},"parent":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\node_modules\\@polymer\\polymer\\polymer-element.js","resolved":"C:\\Users\\justinberry\\Desktop\\parcel-lit-element\\node_modules\\@polymer\\polymer\\lib\\utils\\html-tag.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _elementMixin.version;\n  }\n});\nObject.defineProperty(exports, \"html\", {\n  enumerable: true,\n  get: function () {\n    return _htmlTag.html;\n  }\n});\nexports.PolymerElement = void 0;\n\nvar _elementMixin = require(\"./lib/mixins/element-mixin.js\");\n\nvar _htmlTag = require(\"./lib/utils/html-tag.js\");\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nconst PolymerElement = (0, _elementMixin.ElementMixin)(HTMLElement);\nexports.PolymerElement = PolymerElement;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":20,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":1,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":2,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":3,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":4,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":5,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":6,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":7,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":8,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":9,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":16,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":17,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":18,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":19,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":20,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":21,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":22,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":23,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":24,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":25,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":26,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":27,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":28,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":29,"column":0}},{"generated":{"line":48,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":30,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":31,"column":7}},{"name":"PolymerElement","generated":{"line":49,"column":6},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":31,"column":13}},{"generated":{"line":49,"column":20},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":31,"column":27}},{"generated":{"line":49,"column":23},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":31,"column":30}},{"name":"HTMLElement","generated":{"line":49,"column":55},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":31,"column":43}},{"generated":{"line":49,"column":66},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":31,"column":30}},{"generated":{"line":49,"column":67},"source":"../node_modules/@polymer/polymer/polymer-element.js","original":{"line":31,"column":7}}],"sources":{"../node_modules/@polymer/polymer/polymer-element.js":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { ElementMixin, version } from './lib/mixins/element-mixin.js';\nexport { html } from './lib/utils/html-tag.js';\n\nexport { version };\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nexport const PolymerElement = ElementMixin(HTMLElement);\n"},"lineCount":null}},"error":null,"hash":"2205310676fc97b491e4d277ec1db324","cacheData":{"env":{}}}